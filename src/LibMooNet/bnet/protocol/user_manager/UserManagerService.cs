// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.user_manager {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class UserManagerService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder> internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ClearRecentPlayersResponse, global::bnet.protocol.user_manager.ClearRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockEntityRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockEntityRequest, global::bnet.protocol.user_manager.BlockEntityRequest.Builder> internal__static_bnet_protocol_user_manager_BlockEntityRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockEntityResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockEntityResponse, global::bnet.protocol.user_manager.BlockEntityResponse.Builder> internal__static_bnet_protocol_user_manager_BlockEntityResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnblockEntityRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockEntityRequest, global::bnet.protocol.user_manager.UnblockEntityRequest.Builder> internal__static_bnet_protocol_user_manager_UnblockEntityRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnblockEntityResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockEntityResponse, global::bnet.protocol.user_manager.UnblockEntityResponse.Builder> internal__static_bnet_protocol_user_manager_UnblockEntityResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ClearBlockListResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ClearBlockListResponse, global::bnet.protocol.user_manager.ClearBlockListResponse.Builder> internal__static_bnet_protocol_user_manager_ClearBlockListResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_EntityBlockedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.EntityBlockedNotification, global::bnet.protocol.user_manager.EntityBlockedNotification.Builder> internal__static_bnet_protocol_user_manager_EntityBlockedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.EntityUnblockedNotification, global::bnet.protocol.user_manager.EntityUnblockedNotification.Builder> internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayersAddedNotification, global::bnet.protocol.user_manager.RecentPlayersAddedNotification.Builder> internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayersRemovedNotification, global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.Builder> internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static UserManagerService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Ch9ibmV0L3VzZXJfbWFuYWdlcl9zZXJ2aWNlLnByb3RvEhpibmV0LnByb3Rv" + 
            "Y29sLnVzZXJfbWFuYWdlchoUYm5ldC9hdHRyaWJ1dGUucHJvdG8aEWJuZXQv" + 
            "ZW50aXR5LnByb3RvGg5ibmV0L3JwYy5wcm90byLAAQoMUmVjZW50UGxheWVy" + 
            "EicKBmVudGl0eRgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSEgoK" + 
            "cHJvZ3JhbV9pZBgCIAEoCRIYChB0aW1lc3RhbXBfcGxheWVkGAMgASgGEjYK" + 
            "CmF0dHJpYnV0ZXMYBCADKAsyIi5ibmV0LnByb3RvY29sLmF0dHJpYnV0ZS5B" + 
            "dHRyaWJ1dGUSDQoCaWQYBSABKAc6ATASEgoHY291bnRlchgGIAEoBzoBMCIy" + 
            "Ch1TdWJzY3JpYmVUb1VzZXJNYW5hZ2VyUmVxdWVzdBIRCglvYmplY3RfaWQY" + 
            "ASACKAQiiwEKHlN1YnNjcmliZVRvVXNlck1hbmFnZXJSZXNwb25zZRInCgZi" + 
            "bG9ja3MYASADKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEkAKDnJlY2Vu" + 
            "dF9wbGF5ZXJzGAIgAygLMiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIu" + 
            "UmVjZW50UGxheWVyIlQKF0FkZFJlY2VudFBsYXllcnNSZXF1ZXN0EjkKB3Bs" + 
            "YXllcnMYASADKAsyKC5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5SZWNl" + 
            "bnRQbGF5ZXIidAoYQWRkUmVjZW50UGxheWVyc1Jlc3BvbnNlEj8KDXBsYXll" + 
            "cnNfYWRkZWQYASADKAsyKC5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5S" + 
            "ZWNlbnRQbGF5ZXISFwoPcGxheWVyc19yZW1vdmVkGAMgAygHIjUKGkNsZWFy" + 
            "UmVjZW50UGxheWVyc1Jlc3BvbnNlEhcKD3BsYXllcnNfcmVtb3ZlZBgBIAMo" + 
            "ByI9ChJCbG9ja0VudGl0eVJlcXVlc3QSJwoGZW50aXR5GAEgAigLMhcuYm5l" + 
            "dC5wcm90b2NvbC5FbnRpdHlJZCJGChNCbG9ja0VudGl0eVJlc3BvbnNlEi8K" + 
            "DmJsb2NrZWRfZW50aXR5GAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
            "ZCI/ChRVbmJsb2NrRW50aXR5UmVxdWVzdBInCgZlbnRpdHkYASACKAsyFy5i" + 
            "bmV0LnByb3RvY29sLkVudGl0eUlkIkoKFVVuYmxvY2tFbnRpdHlSZXNwb25z" + 
            "ZRIxChB1bmJsb2NrZWRfZW50aXR5GAEgASgLMhcuYm5ldC5wcm90b2NvbC5F" + 
            "bnRpdHlJZCJLChZDbGVhckJsb2NrTGlzdFJlc3BvbnNlEjEKEHVuYmxvY2tl" + 
            "ZF9lbnRpdHkYASADKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkIk4KGUVu" + 
            "dGl0eUJsb2NrZWROb3RpZmljYXRpb24SMQoQYmxvY2tlZF9lbnRpdGllcxgB" + 
            "IAMoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQiUgobRW50aXR5VW5ibG9j" + 
            "a2VkTm90aWZpY2F0aW9uEjMKEnVuYmxvY2tlZF9lbnRpdGllcxgBIAMoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQiYQoeUmVjZW50UGxheWVyc0FkZGVk" + 
            "Tm90aWZpY2F0aW9uEj8KDWFkZGVkX3BsYXllcnMYASADKAsyKC5ibmV0LnBy" + 
            "b3RvY29sLnVzZXJfbWFuYWdlci5SZWNlbnRQbGF5ZXIiZQogUmVjZW50UGxh" + 
            "eWVyc1JlbW92ZWROb3RpZmljYXRpb24SQQoPcmVtb3ZlZF9wbGF5ZXJzGAEg" + 
            "AygLMiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuUmVjZW50UGxheWVy" + 
            "Mp8HChJVc2VyTWFuYWdlclNlcnZpY2USlQEKFlN1YnNjcmliZVRvVXNlck1h" + 
            "bmFnZXISOS5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5TdWJzY3JpYmVU" + 
            "b1VzZXJNYW5hZ2VyUmVxdWVzdBo6LmJuZXQucHJvdG9jb2wudXNlcl9tYW5h" + 
            "Z2VyLlN1YnNjcmliZVRvVXNlck1hbmFnZXJSZXNwb25zZSIEgLUYARKDAQoQ" + 
            "QWRkUmVjZW50UGxheWVycxIzLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2Vy" + 
            "LkFkZFJlY2VudFBsYXllcnNSZXF1ZXN0GjQuYm5ldC5wcm90b2NvbC51c2Vy" + 
            "X21hbmFnZXIuQWRkUmVjZW50UGxheWVyc1Jlc3BvbnNlIgSAtRgKEmkKEkNs" + 
            "ZWFyUmVjZW50UGxheWVycxIVLmJuZXQucHJvdG9jb2wuTm9EYXRhGjYuYm5l" + 
            "dC5wcm90b2NvbC51c2VyX21hbmFnZXIuQ2xlYXJSZWNlbnRQbGF5ZXJzUmVz" + 
            "cG9uc2UiBIC1GAsSdAoLQmxvY2tFbnRpdHkSLi5ibmV0LnByb3RvY29sLnVz" + 
            "ZXJfbWFuYWdlci5CbG9ja0VudGl0eVJlcXVlc3QaLy5ibmV0LnByb3RvY29s" + 
            "LnVzZXJfbWFuYWdlci5CbG9ja0VudGl0eVJlc3BvbnNlIgSAtRgUEnoKDVVu" + 
            "YmxvY2tFbnRpdHkSMC5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5VbmJs" + 
            "b2NrRW50aXR5UmVxdWVzdBoxLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2Vy" + 
            "LlVuYmxvY2tFbnRpdHlSZXNwb25zZSIEgLUYFRJhCg5DbGVhckJsb2NrTGlz" + 
            "dBIVLmJuZXQucHJvdG9jb2wuTm9EYXRhGjIuYm5ldC5wcm90b2NvbC51c2Vy" + 
            "X21hbmFnZXIuQ2xlYXJCbG9ja0xpc3RSZXNwb25zZSIEgLUYFhJkChVCbG9j" + 
            "a0VudGl0eUZvclNlc3Npb24SLi5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdl" + 
            "ci5CbG9ja0VudGl0eVJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIE" + 
            "gLUYKBJFCg1Mb2FkQmxvY2tMaXN0EhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
            "ZBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgyMu8DChFVc2VyTWFuYWdl" + 
            "ck5vdGlmeRJuChNOb3RpZnlFbnRpdHlCbG9ja2VkEjUuYm5ldC5wcm90b2Nv" + 
            "bC51c2VyX21hbmFnZXIuRW50aXR5QmxvY2tlZE5vdGlmaWNhdGlvbhoaLmJu" + 
            "ZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAEScgoVTm90aWZ5RW50aXR5" + 
            "VW5ibG9ja2VkEjcuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuRW50aXR5" + 
            "VW5ibG9ja2VkTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19SRVNQ" + 
            "T05TRSIEgLUYAhJ4ChhOb3RpZnlSZWNlbnRQbGF5ZXJzQWRkZWQSOi5ibmV0" + 
            "LnByb3RvY29sLnVzZXJfbWFuYWdlci5SZWNlbnRQbGF5ZXJzQWRkZWROb3Rp" + 
            "ZmljYXRpb24aGi5ibmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgLEnwK" + 
            "Gk5vdGlmeVJlY2VudFBsYXllcnNSZW1vdmVkEjwuYm5ldC5wcm90b2NvbC51" + 
            "c2VyX21hbmFnZXIuUmVjZW50UGxheWVyc1JlbW92ZWROb3RpZmljYXRpb24a" + 
            "Gi5ibmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgMQgOAAQA=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder>(internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor,
                  new string[] { "Entity", "ProgramId", "TimestampPlayed", "Attributes", "Id", "Counter", });
          internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor,
                  new string[] { "ObjectId", });
          internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor,
                  new string[] { "Blocks", "RecentPlayers", });
          internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor,
                  new string[] { "Players", });
          internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor,
                  new string[] { "PlayersAdded", "PlayersRemoved", });
          internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ClearRecentPlayersResponse, global::bnet.protocol.user_manager.ClearRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__Descriptor,
                  new string[] { "PlayersRemoved", });
          internal__static_bnet_protocol_user_manager_BlockEntityRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_user_manager_BlockEntityRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockEntityRequest, global::bnet.protocol.user_manager.BlockEntityRequest.Builder>(internal__static_bnet_protocol_user_manager_BlockEntityRequest__Descriptor,
                  new string[] { "Entity", });
          internal__static_bnet_protocol_user_manager_BlockEntityResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_user_manager_BlockEntityResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockEntityResponse, global::bnet.protocol.user_manager.BlockEntityResponse.Builder>(internal__static_bnet_protocol_user_manager_BlockEntityResponse__Descriptor,
                  new string[] { "BlockedEntity", });
          internal__static_bnet_protocol_user_manager_UnblockEntityRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_user_manager_UnblockEntityRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockEntityRequest, global::bnet.protocol.user_manager.UnblockEntityRequest.Builder>(internal__static_bnet_protocol_user_manager_UnblockEntityRequest__Descriptor,
                  new string[] { "Entity", });
          internal__static_bnet_protocol_user_manager_UnblockEntityResponse__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_user_manager_UnblockEntityResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockEntityResponse, global::bnet.protocol.user_manager.UnblockEntityResponse.Builder>(internal__static_bnet_protocol_user_manager_UnblockEntityResponse__Descriptor,
                  new string[] { "UnblockedEntity", });
          internal__static_bnet_protocol_user_manager_ClearBlockListResponse__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_user_manager_ClearBlockListResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ClearBlockListResponse, global::bnet.protocol.user_manager.ClearBlockListResponse.Builder>(internal__static_bnet_protocol_user_manager_ClearBlockListResponse__Descriptor,
                  new string[] { "UnblockedEntity", });
          internal__static_bnet_protocol_user_manager_EntityBlockedNotification__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_user_manager_EntityBlockedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.EntityBlockedNotification, global::bnet.protocol.user_manager.EntityBlockedNotification.Builder>(internal__static_bnet_protocol_user_manager_EntityBlockedNotification__Descriptor,
                  new string[] { "BlockedEntities", });
          internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.EntityUnblockedNotification, global::bnet.protocol.user_manager.EntityUnblockedNotification.Builder>(internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__Descriptor,
                  new string[] { "UnblockedEntities", });
          internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayersAddedNotification, global::bnet.protocol.user_manager.RecentPlayersAddedNotification.Builder>(internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__Descriptor,
                  new string[] { "AddedPlayers", });
          internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayersRemovedNotification, global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.Builder>(internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__Descriptor,
                  new string[] { "RemovedPlayers", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RecentPlayer : pb::GeneratedMessage<RecentPlayer, RecentPlayer.Builder> {
    private RecentPlayer() { }
    private static readonly RecentPlayer defaultInstance = new RecentPlayer().MakeReadOnly();
    private static readonly string[] _recentPlayerFieldNames = new string[] { "attributes", "counter", "entity", "id", "program_id", "timestamp_played" };
    private static readonly uint[] _recentPlayerFieldTags = new uint[] { 34, 53, 10, 45, 18, 25 };
    public static RecentPlayer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecentPlayer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayer, RecentPlayer.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::bnet.protocol.EntityId entity_;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::bnet.protocol.EntityId Entity {
      get { return entity_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ProgramIdFieldNumber = 2;
    private bool hasProgramId;
    private string programId_ = "";
    public bool HasProgramId {
      get { return hasProgramId; }
    }
    public string ProgramId {
      get { return programId_; }
    }
    
    public const int TimestampPlayedFieldNumber = 3;
    private bool hasTimestampPlayed;
    private ulong timestampPlayed_;
    public bool HasTimestampPlayed {
      get { return hasTimestampPlayed; }
    }
    public ulong TimestampPlayed {
      get { return timestampPlayed_; }
    }
    
    public const int AttributesFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attributes_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public const int IdFieldNumber = 5;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    public uint Id {
      get { return id_; }
    }
    
    public const int CounterFieldNumber = 6;
    private bool hasCounter;
    private uint counter_;
    public bool HasCounter {
      get { return hasCounter; }
    }
    public uint Counter {
      get { return counter_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntity) return false;
        if (!Entity.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recentPlayerFieldNames;
      if (hasEntity) {
        output.WriteMessage(1, field_names[2], Entity);
      }
      if (hasProgramId) {
        output.WriteString(2, field_names[4], ProgramId);
      }
      if (hasTimestampPlayed) {
        output.WriteFixed64(3, field_names[5], TimestampPlayed);
      }
      if (attributes_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], attributes_);
      }
      if (hasId) {
        output.WriteFixed32(5, field_names[3], Id);
      }
      if (hasCounter) {
        output.WriteFixed32(6, field_names[1], Counter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
        }
        if (hasProgramId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ProgramId);
        }
        if (hasTimestampPlayed) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, TimestampPlayed);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(5, Id);
        }
        if (hasCounter) {
          size += pb::CodedOutputStream.ComputeFixed32Size(6, Counter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecentPlayer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecentPlayer MakeReadOnly() {
      attributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecentPlayer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecentPlayer result;
      
      private RecentPlayer PrepareBuilder() {
        if (resultIsReadOnly) {
          RecentPlayer original = result;
          result = new RecentPlayer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecentPlayer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.Descriptor; }
      }
      
      public override RecentPlayer DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance; }
      }
      
      public override RecentPlayer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecentPlayer) {
          return MergeFrom((RecentPlayer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecentPlayer other) {
        if (other == global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        if (other.HasProgramId) {
          ProgramId = other.ProgramId;
        }
        if (other.HasTimestampPlayed) {
          TimestampPlayed = other.TimestampPlayed;
        }
        if (other.attributes_.Count != 0) {
          result.attributes_.Add(other.attributes_);
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasCounter) {
          Counter = other.Counter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recentPlayerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recentPlayerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasProgramId = input.ReadString(ref result.programId_);
              break;
            }
            case 25: {
              result.hasTimestampPlayed = input.ReadFixed64(ref result.timestampPlayed_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attributes_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 45: {
              result.hasId = input.ReadFixed32(ref result.id_);
              break;
            }
            case 53: {
              result.hasCounter = input.ReadFixed32(ref result.counter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntity {
       get { return result.hasEntity; }
      }
      public global::bnet.protocol.EntityId Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntity &&
            result.entity_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entity_ = global::bnet.protocol.EntityId.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.hasEntity = false;
        result.entity_ = null;
        return this;
      }
      
      public bool HasProgramId {
        get { return result.hasProgramId; }
      }
      public string ProgramId {
        get { return result.ProgramId; }
        set { SetProgramId(value); }
      }
      public Builder SetProgramId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProgramId = true;
        result.programId_ = value;
        return this;
      }
      public Builder ClearProgramId() {
        PrepareBuilder();
        result.hasProgramId = false;
        result.programId_ = "";
        return this;
      }
      
      public bool HasTimestampPlayed {
        get { return result.hasTimestampPlayed; }
      }
      public ulong TimestampPlayed {
        get { return result.TimestampPlayed; }
        set { SetTimestampPlayed(value); }
      }
      public Builder SetTimestampPlayed(ulong value) {
        PrepareBuilder();
        result.hasTimestampPlayed = true;
        result.timestampPlayed_ = value;
        return this;
      }
      public Builder ClearTimestampPlayed() {
        PrepareBuilder();
        result.hasTimestampPlayed = false;
        result.timestampPlayed_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributesList {
        get { return PrepareBuilder().attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        PrepareBuilder();
        result.attributes_.Add(values);
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.attributes_.Clear();
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasCounter {
        get { return result.hasCounter; }
      }
      public uint Counter {
        get { return result.Counter; }
        set { SetCounter(value); }
      }
      public Builder SetCounter(uint value) {
        PrepareBuilder();
        result.hasCounter = true;
        result.counter_ = value;
        return this;
      }
      public Builder ClearCounter() {
        PrepareBuilder();
        result.hasCounter = false;
        result.counter_ = 0;
        return this;
      }
    }
    static RecentPlayer() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToUserManagerRequest : pb::GeneratedMessage<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> {
    private SubscribeToUserManagerRequest() { }
    private static readonly SubscribeToUserManagerRequest defaultInstance = new SubscribeToUserManagerRequest().MakeReadOnly();
    private static readonly string[] _subscribeToUserManagerRequestFieldNames = new string[] { "object_id" };
    private static readonly uint[] _subscribeToUserManagerRequestFieldTags = new uint[] { 8 };
    public static SubscribeToUserManagerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToUserManagerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToUserManagerRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToUserManagerRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToUserManagerRequest result;
      
      private SubscribeToUserManagerRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToUserManagerRequest original = result;
          result = new SubscribeToUserManagerRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToUserManagerRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Descriptor; }
      }
      
      public override SubscribeToUserManagerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerRequest) {
          return MergeFrom((SubscribeToUserManagerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerRequest other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeToUserManagerRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToUserManagerResponse : pb::GeneratedMessage<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> {
    private SubscribeToUserManagerResponse() { }
    private static readonly SubscribeToUserManagerResponse defaultInstance = new SubscribeToUserManagerResponse().MakeReadOnly();
    private static readonly string[] _subscribeToUserManagerResponseFieldNames = new string[] { "blocks", "recent_players" };
    private static readonly uint[] _subscribeToUserManagerResponseFieldTags = new uint[] { 10, 18 };
    public static SubscribeToUserManagerResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToUserManagerResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable; }
    }
    
    public const int BlocksFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> blocks_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> BlocksList {
      get { return blocks_; }
    }
    public int BlocksCount {
      get { return blocks_.Count; }
    }
    public global::bnet.protocol.EntityId GetBlocks(int index) {
      return blocks_[index];
    }
    
    public const int RecentPlayersFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> recentPlayers_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
      get { return recentPlayers_; }
    }
    public int RecentPlayersCount {
      get { return recentPlayers_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
      return recentPlayers_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in BlocksList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerResponseFieldNames;
      if (blocks_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], blocks_);
      }
      if (recentPlayers_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], recentPlayers_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in BlocksList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToUserManagerResponse MakeReadOnly() {
      blocks_.MakeReadOnly();
      recentPlayers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToUserManagerResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToUserManagerResponse result;
      
      private SubscribeToUserManagerResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToUserManagerResponse original = result;
          result = new SubscribeToUserManagerResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToUserManagerResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Descriptor; }
      }
      
      public override SubscribeToUserManagerResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerResponse) {
          return MergeFrom((SubscribeToUserManagerResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerResponse other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.blocks_.Count != 0) {
          result.blocks_.Add(other.blocks_);
        }
        if (other.recentPlayers_.Count != 0) {
          result.recentPlayers_.Add(other.recentPlayers_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.blocks_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.recentPlayers_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> BlocksList {
        get { return PrepareBuilder().blocks_; }
      }
      public int BlocksCount {
        get { return result.BlocksCount; }
      }
      public global::bnet.protocol.EntityId GetBlocks(int index) {
        return result.GetBlocks(index);
      }
      public Builder SetBlocks(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blocks_[index] = value;
        return this;
      }
      public Builder SetBlocks(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blocks_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBlocks(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blocks_.Add(value);
        return this;
      }
      public Builder AddBlocks(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blocks_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBlocks(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.blocks_.Add(values);
        return this;
      }
      public Builder ClearBlocks() {
        PrepareBuilder();
        result.blocks_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
        get { return PrepareBuilder().recentPlayers_; }
      }
      public int RecentPlayersCount {
        get { return result.RecentPlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
        return result.GetRecentPlayers(index);
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recentPlayers_[index] = value;
        return this;
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recentPlayers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recentPlayers_.Add(value);
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recentPlayers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRecentPlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.recentPlayers_.Add(values);
        return this;
      }
      public Builder ClearRecentPlayers() {
        PrepareBuilder();
        result.recentPlayers_.Clear();
        return this;
      }
    }
    static SubscribeToUserManagerResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddRecentPlayersRequest : pb::GeneratedMessage<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> {
    private AddRecentPlayersRequest() { }
    private static readonly AddRecentPlayersRequest defaultInstance = new AddRecentPlayersRequest().MakeReadOnly();
    private static readonly string[] _addRecentPlayersRequestFieldNames = new string[] { "players" };
    private static readonly uint[] _addRecentPlayersRequestFieldTags = new uint[] { 10 };
    public static AddRecentPlayersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRecentPlayersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> players_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersRequestFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRecentPlayersRequest MakeReadOnly() {
      players_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRecentPlayersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRecentPlayersRequest result;
      
      private AddRecentPlayersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRecentPlayersRequest original = result;
          result = new AddRecentPlayersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRecentPlayersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.Descriptor; }
      }
      
      public override AddRecentPlayersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance; }
      }
      
      public override AddRecentPlayersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersRequest) {
          return MergeFrom((AddRecentPlayersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersRequest other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.players_.Count != 0) {
          result.players_.Add(other.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
        get { return PrepareBuilder().players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.players_.Add(values);
        return this;
      }
      public Builder ClearPlayers() {
        PrepareBuilder();
        result.players_.Clear();
        return this;
      }
    }
    static AddRecentPlayersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddRecentPlayersResponse : pb::GeneratedMessage<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> {
    private AddRecentPlayersResponse() { }
    private static readonly AddRecentPlayersResponse defaultInstance = new AddRecentPlayersResponse().MakeReadOnly();
    private static readonly string[] _addRecentPlayersResponseFieldNames = new string[] { "players_added", "players_removed" };
    private static readonly uint[] _addRecentPlayersResponseFieldTags = new uint[] { 10, 29 };
    public static AddRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersAddedFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersAdded_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
      get { return playersAdded_; }
    }
    public int PlayersAddedCount {
      get { return playersAdded_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
      return playersAdded_[index];
    }
    
    public const int PlayersRemovedFieldNumber = 3;
    private pbc::PopsicleList<uint> playersRemoved_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> PlayersRemovedList {
      get { return pbc::Lists.AsReadOnly(playersRemoved_); }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public uint GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersResponseFieldNames;
      if (playersAdded_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playersAdded_);
      }
      if (playersRemoved_.Count > 0) {
        output.WriteFixed32Array(3, field_names[1], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        {
          int dataSize = 0;
          dataSize = 4 * playersRemoved_.Count;
          size += dataSize;
          size += 1 * playersRemoved_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRecentPlayersResponse MakeReadOnly() {
      playersAdded_.MakeReadOnly();
      playersRemoved_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRecentPlayersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRecentPlayersResponse result;
      
      private AddRecentPlayersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRecentPlayersResponse original = result;
          result = new AddRecentPlayersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRecentPlayersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.Descriptor; }
      }
      
      public override AddRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance; }
      }
      
      public override AddRecentPlayersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersResponse) {
          return MergeFrom((AddRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.playersAdded_.Count != 0) {
          result.playersAdded_.Add(other.playersAdded_);
        }
        if (other.playersRemoved_.Count != 0) {
          result.playersRemoved_.Add(other.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playersAdded_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
            case 26:
            case 29: {
              input.ReadFixed32Array(tag, field_name, result.playersRemoved_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
        get { return PrepareBuilder().playersAdded_; }
      }
      public int PlayersAddedCount {
        get { return result.PlayersAddedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
        return result.GetPlayersAdded(index);
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersAdded_[index] = value;
        return this;
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersAdded_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersAdded_.Add(value);
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersAdded_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersAdded(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.playersAdded_.Add(values);
        return this;
      }
      public Builder ClearPlayersAdded() {
        PrepareBuilder();
        result.playersAdded_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<uint> PlayersRemovedList {
        get { return PrepareBuilder().playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public uint GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, uint value) {
        PrepareBuilder();
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder AddPlayersRemoved(uint value) {
        PrepareBuilder();
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.playersRemoved_.Add(values);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        PrepareBuilder();
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static AddRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClearRecentPlayersResponse : pb::GeneratedMessage<ClearRecentPlayersResponse, ClearRecentPlayersResponse.Builder> {
    private ClearRecentPlayersResponse() { }
    private static readonly ClearRecentPlayersResponse defaultInstance = new ClearRecentPlayersResponse().MakeReadOnly();
    private static readonly string[] _clearRecentPlayersResponseFieldNames = new string[] { "players_removed" };
    private static readonly uint[] _clearRecentPlayersResponseFieldTags = new uint[] { 13 };
    public static ClearRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClearRecentPlayersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClearRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClearRecentPlayersResponse, ClearRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_ClearRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersRemovedFieldNumber = 1;
    private pbc::PopsicleList<uint> playersRemoved_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> PlayersRemovedList {
      get { return pbc::Lists.AsReadOnly(playersRemoved_); }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public uint GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clearRecentPlayersResponseFieldNames;
      if (playersRemoved_.Count > 0) {
        output.WriteFixed32Array(1, field_names[0], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * playersRemoved_.Count;
          size += dataSize;
          size += 1 * playersRemoved_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClearRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClearRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClearRecentPlayersResponse MakeReadOnly() {
      playersRemoved_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClearRecentPlayersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClearRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClearRecentPlayersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClearRecentPlayersResponse result;
      
      private ClearRecentPlayersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ClearRecentPlayersResponse original = result;
          result = new ClearRecentPlayersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClearRecentPlayersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ClearRecentPlayersResponse.Descriptor; }
      }
      
      public override ClearRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ClearRecentPlayersResponse.DefaultInstance; }
      }
      
      public override ClearRecentPlayersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClearRecentPlayersResponse) {
          return MergeFrom((ClearRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClearRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.ClearRecentPlayersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.playersRemoved_.Count != 0) {
          result.playersRemoved_.Add(other.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clearRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clearRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 13: {
              input.ReadFixed32Array(tag, field_name, result.playersRemoved_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<uint> PlayersRemovedList {
        get { return PrepareBuilder().playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public uint GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, uint value) {
        PrepareBuilder();
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder AddPlayersRemoved(uint value) {
        PrepareBuilder();
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.playersRemoved_.Add(values);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        PrepareBuilder();
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static ClearRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BlockEntityRequest : pb::GeneratedMessage<BlockEntityRequest, BlockEntityRequest.Builder> {
    private BlockEntityRequest() { }
    private static readonly BlockEntityRequest defaultInstance = new BlockEntityRequest().MakeReadOnly();
    private static readonly string[] _blockEntityRequestFieldNames = new string[] { "entity" };
    private static readonly uint[] _blockEntityRequestFieldTags = new uint[] { 10 };
    public static BlockEntityRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockEntityRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockEntityRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_BlockEntityRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockEntityRequest, BlockEntityRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_BlockEntityRequest__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::bnet.protocol.EntityId entity_;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::bnet.protocol.EntityId Entity {
      get { return entity_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntity) return false;
        if (!Entity.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockEntityRequestFieldNames;
      if (hasEntity) {
        output.WriteMessage(1, field_names[0], Entity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockEntityRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockEntityRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockEntityRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockEntityRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockEntityRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockEntityRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockEntityRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockEntityRequest result;
      
      private BlockEntityRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockEntityRequest original = result;
          result = new BlockEntityRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockEntityRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockEntityRequest.Descriptor; }
      }
      
      public override BlockEntityRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockEntityRequest.DefaultInstance; }
      }
      
      public override BlockEntityRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockEntityRequest) {
          return MergeFrom((BlockEntityRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockEntityRequest other) {
        if (other == global::bnet.protocol.user_manager.BlockEntityRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockEntityRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockEntityRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntity {
       get { return result.hasEntity; }
      }
      public global::bnet.protocol.EntityId Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntity &&
            result.entity_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entity_ = global::bnet.protocol.EntityId.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.hasEntity = false;
        result.entity_ = null;
        return this;
      }
    }
    static BlockEntityRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BlockEntityResponse : pb::GeneratedMessage<BlockEntityResponse, BlockEntityResponse.Builder> {
    private BlockEntityResponse() { }
    private static readonly BlockEntityResponse defaultInstance = new BlockEntityResponse().MakeReadOnly();
    private static readonly string[] _blockEntityResponseFieldNames = new string[] { "blocked_entity" };
    private static readonly uint[] _blockEntityResponseFieldTags = new uint[] { 10 };
    public static BlockEntityResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockEntityResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockEntityResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_BlockEntityResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockEntityResponse, BlockEntityResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_BlockEntityResponse__FieldAccessorTable; }
    }
    
    public const int BlockedEntityFieldNumber = 1;
    private bool hasBlockedEntity;
    private global::bnet.protocol.EntityId blockedEntity_;
    public bool HasBlockedEntity {
      get { return hasBlockedEntity; }
    }
    public global::bnet.protocol.EntityId BlockedEntity {
      get { return blockedEntity_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBlockedEntity) {
          if (!BlockedEntity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockEntityResponseFieldNames;
      if (hasBlockedEntity) {
        output.WriteMessage(1, field_names[0], BlockedEntity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBlockedEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BlockedEntity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockEntityResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockEntityResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockEntityResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockEntityResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockEntityResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockEntityResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockEntityResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockEntityResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockEntityResponse result;
      
      private BlockEntityResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockEntityResponse original = result;
          result = new BlockEntityResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockEntityResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockEntityResponse.Descriptor; }
      }
      
      public override BlockEntityResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockEntityResponse.DefaultInstance; }
      }
      
      public override BlockEntityResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockEntityResponse) {
          return MergeFrom((BlockEntityResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockEntityResponse other) {
        if (other == global::bnet.protocol.user_manager.BlockEntityResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBlockedEntity) {
          MergeBlockedEntity(other.BlockedEntity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockEntityResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockEntityResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBlockedEntity) {
                subBuilder.MergeFrom(BlockedEntity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BlockedEntity = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBlockedEntity {
       get { return result.hasBlockedEntity; }
      }
      public global::bnet.protocol.EntityId BlockedEntity {
        get { return result.BlockedEntity; }
        set { SetBlockedEntity(value); }
      }
      public Builder SetBlockedEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBlockedEntity = true;
        result.blockedEntity_ = value;
        return this;
      }
      public Builder SetBlockedEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBlockedEntity = true;
        result.blockedEntity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBlockedEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBlockedEntity &&
            result.blockedEntity_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.blockedEntity_ = global::bnet.protocol.EntityId.CreateBuilder(result.blockedEntity_).MergeFrom(value).BuildPartial();
        } else {
          result.blockedEntity_ = value;
        }
        result.hasBlockedEntity = true;
        return this;
      }
      public Builder ClearBlockedEntity() {
        PrepareBuilder();
        result.hasBlockedEntity = false;
        result.blockedEntity_ = null;
        return this;
      }
    }
    static BlockEntityResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnblockEntityRequest : pb::GeneratedMessage<UnblockEntityRequest, UnblockEntityRequest.Builder> {
    private UnblockEntityRequest() { }
    private static readonly UnblockEntityRequest defaultInstance = new UnblockEntityRequest().MakeReadOnly();
    private static readonly string[] _unblockEntityRequestFieldNames = new string[] { "entity" };
    private static readonly uint[] _unblockEntityRequestFieldTags = new uint[] { 10 };
    public static UnblockEntityRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnblockEntityRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnblockEntityRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_UnblockEntityRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnblockEntityRequest, UnblockEntityRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_UnblockEntityRequest__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::bnet.protocol.EntityId entity_;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::bnet.protocol.EntityId Entity {
      get { return entity_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntity) return false;
        if (!Entity.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unblockEntityRequestFieldNames;
      if (hasEntity) {
        output.WriteMessage(1, field_names[0], Entity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnblockEntityRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnblockEntityRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockEntityRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnblockEntityRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnblockEntityRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnblockEntityRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnblockEntityRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnblockEntityRequest result;
      
      private UnblockEntityRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnblockEntityRequest original = result;
          result = new UnblockEntityRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnblockEntityRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnblockEntityRequest.Descriptor; }
      }
      
      public override UnblockEntityRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnblockEntityRequest.DefaultInstance; }
      }
      
      public override UnblockEntityRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnblockEntityRequest) {
          return MergeFrom((UnblockEntityRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnblockEntityRequest other) {
        if (other == global::bnet.protocol.user_manager.UnblockEntityRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unblockEntityRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unblockEntityRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntity {
       get { return result.hasEntity; }
      }
      public global::bnet.protocol.EntityId Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntity &&
            result.entity_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entity_ = global::bnet.protocol.EntityId.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.hasEntity = false;
        result.entity_ = null;
        return this;
      }
    }
    static UnblockEntityRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnblockEntityResponse : pb::GeneratedMessage<UnblockEntityResponse, UnblockEntityResponse.Builder> {
    private UnblockEntityResponse() { }
    private static readonly UnblockEntityResponse defaultInstance = new UnblockEntityResponse().MakeReadOnly();
    private static readonly string[] _unblockEntityResponseFieldNames = new string[] { "unblocked_entity" };
    private static readonly uint[] _unblockEntityResponseFieldTags = new uint[] { 10 };
    public static UnblockEntityResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnblockEntityResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnblockEntityResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_UnblockEntityResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnblockEntityResponse, UnblockEntityResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_UnblockEntityResponse__FieldAccessorTable; }
    }
    
    public const int UnblockedEntityFieldNumber = 1;
    private bool hasUnblockedEntity;
    private global::bnet.protocol.EntityId unblockedEntity_;
    public bool HasUnblockedEntity {
      get { return hasUnblockedEntity; }
    }
    public global::bnet.protocol.EntityId UnblockedEntity {
      get { return unblockedEntity_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasUnblockedEntity) {
          if (!UnblockedEntity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unblockEntityResponseFieldNames;
      if (hasUnblockedEntity) {
        output.WriteMessage(1, field_names[0], UnblockedEntity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUnblockedEntity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, UnblockedEntity);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnblockEntityResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnblockEntityResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnblockEntityResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockEntityResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnblockEntityResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnblockEntityResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnblockEntityResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnblockEntityResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnblockEntityResponse result;
      
      private UnblockEntityResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UnblockEntityResponse original = result;
          result = new UnblockEntityResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnblockEntityResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnblockEntityResponse.Descriptor; }
      }
      
      public override UnblockEntityResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnblockEntityResponse.DefaultInstance; }
      }
      
      public override UnblockEntityResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnblockEntityResponse) {
          return MergeFrom((UnblockEntityResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnblockEntityResponse other) {
        if (other == global::bnet.protocol.user_manager.UnblockEntityResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUnblockedEntity) {
          MergeUnblockedEntity(other.UnblockedEntity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unblockEntityResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unblockEntityResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasUnblockedEntity) {
                subBuilder.MergeFrom(UnblockedEntity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UnblockedEntity = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUnblockedEntity {
       get { return result.hasUnblockedEntity; }
      }
      public global::bnet.protocol.EntityId UnblockedEntity {
        get { return result.UnblockedEntity; }
        set { SetUnblockedEntity(value); }
      }
      public Builder SetUnblockedEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUnblockedEntity = true;
        result.unblockedEntity_ = value;
        return this;
      }
      public Builder SetUnblockedEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUnblockedEntity = true;
        result.unblockedEntity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUnblockedEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUnblockedEntity &&
            result.unblockedEntity_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.unblockedEntity_ = global::bnet.protocol.EntityId.CreateBuilder(result.unblockedEntity_).MergeFrom(value).BuildPartial();
        } else {
          result.unblockedEntity_ = value;
        }
        result.hasUnblockedEntity = true;
        return this;
      }
      public Builder ClearUnblockedEntity() {
        PrepareBuilder();
        result.hasUnblockedEntity = false;
        result.unblockedEntity_ = null;
        return this;
      }
    }
    static UnblockEntityResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClearBlockListResponse : pb::GeneratedMessage<ClearBlockListResponse, ClearBlockListResponse.Builder> {
    private ClearBlockListResponse() { }
    private static readonly ClearBlockListResponse defaultInstance = new ClearBlockListResponse().MakeReadOnly();
    private static readonly string[] _clearBlockListResponseFieldNames = new string[] { "unblocked_entity" };
    private static readonly uint[] _clearBlockListResponseFieldTags = new uint[] { 10 };
    public static ClearBlockListResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClearBlockListResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClearBlockListResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_ClearBlockListResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClearBlockListResponse, ClearBlockListResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_ClearBlockListResponse__FieldAccessorTable; }
    }
    
    public const int UnblockedEntityFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> unblockedEntity_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> UnblockedEntityList {
      get { return unblockedEntity_; }
    }
    public int UnblockedEntityCount {
      get { return unblockedEntity_.Count; }
    }
    public global::bnet.protocol.EntityId GetUnblockedEntity(int index) {
      return unblockedEntity_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in UnblockedEntityList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _clearBlockListResponseFieldNames;
      if (unblockedEntity_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], unblockedEntity_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in UnblockedEntityList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClearBlockListResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClearBlockListResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClearBlockListResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClearBlockListResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClearBlockListResponse MakeReadOnly() {
      unblockedEntity_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClearBlockListResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClearBlockListResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClearBlockListResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClearBlockListResponse result;
      
      private ClearBlockListResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ClearBlockListResponse original = result;
          result = new ClearBlockListResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClearBlockListResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ClearBlockListResponse.Descriptor; }
      }
      
      public override ClearBlockListResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ClearBlockListResponse.DefaultInstance; }
      }
      
      public override ClearBlockListResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClearBlockListResponse) {
          return MergeFrom((ClearBlockListResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClearBlockListResponse other) {
        if (other == global::bnet.protocol.user_manager.ClearBlockListResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.unblockedEntity_.Count != 0) {
          result.unblockedEntity_.Add(other.unblockedEntity_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clearBlockListResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clearBlockListResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.unblockedEntity_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> UnblockedEntityList {
        get { return PrepareBuilder().unblockedEntity_; }
      }
      public int UnblockedEntityCount {
        get { return result.UnblockedEntityCount; }
      }
      public global::bnet.protocol.EntityId GetUnblockedEntity(int index) {
        return result.GetUnblockedEntity(index);
      }
      public Builder SetUnblockedEntity(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedEntity_[index] = value;
        return this;
      }
      public Builder SetUnblockedEntity(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedEntity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUnblockedEntity(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedEntity_.Add(value);
        return this;
      }
      public Builder AddUnblockedEntity(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedEntity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUnblockedEntity(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.unblockedEntity_.Add(values);
        return this;
      }
      public Builder ClearUnblockedEntity() {
        PrepareBuilder();
        result.unblockedEntity_.Clear();
        return this;
      }
    }
    static ClearBlockListResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EntityBlockedNotification : pb::GeneratedMessage<EntityBlockedNotification, EntityBlockedNotification.Builder> {
    private EntityBlockedNotification() { }
    private static readonly EntityBlockedNotification defaultInstance = new EntityBlockedNotification().MakeReadOnly();
    private static readonly string[] _entityBlockedNotificationFieldNames = new string[] { "blocked_entities" };
    private static readonly uint[] _entityBlockedNotificationFieldTags = new uint[] { 10 };
    public static EntityBlockedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntityBlockedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntityBlockedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_EntityBlockedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntityBlockedNotification, EntityBlockedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_EntityBlockedNotification__FieldAccessorTable; }
    }
    
    public const int BlockedEntitiesFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> blockedEntities_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> BlockedEntitiesList {
      get { return blockedEntities_; }
    }
    public int BlockedEntitiesCount {
      get { return blockedEntities_.Count; }
    }
    public global::bnet.protocol.EntityId GetBlockedEntities(int index) {
      return blockedEntities_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in BlockedEntitiesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _entityBlockedNotificationFieldNames;
      if (blockedEntities_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], blockedEntities_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in BlockedEntitiesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EntityBlockedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntityBlockedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntityBlockedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityBlockedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntityBlockedNotification MakeReadOnly() {
      blockedEntities_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntityBlockedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EntityBlockedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntityBlockedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntityBlockedNotification result;
      
      private EntityBlockedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EntityBlockedNotification original = result;
          result = new EntityBlockedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntityBlockedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.EntityBlockedNotification.Descriptor; }
      }
      
      public override EntityBlockedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.EntityBlockedNotification.DefaultInstance; }
      }
      
      public override EntityBlockedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntityBlockedNotification) {
          return MergeFrom((EntityBlockedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntityBlockedNotification other) {
        if (other == global::bnet.protocol.user_manager.EntityBlockedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.blockedEntities_.Count != 0) {
          result.blockedEntities_.Add(other.blockedEntities_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entityBlockedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entityBlockedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.blockedEntities_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> BlockedEntitiesList {
        get { return PrepareBuilder().blockedEntities_; }
      }
      public int BlockedEntitiesCount {
        get { return result.BlockedEntitiesCount; }
      }
      public global::bnet.protocol.EntityId GetBlockedEntities(int index) {
        return result.GetBlockedEntities(index);
      }
      public Builder SetBlockedEntities(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockedEntities_[index] = value;
        return this;
      }
      public Builder SetBlockedEntities(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockedEntities_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBlockedEntities(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockedEntities_.Add(value);
        return this;
      }
      public Builder AddBlockedEntities(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockedEntities_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBlockedEntities(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.blockedEntities_.Add(values);
        return this;
      }
      public Builder ClearBlockedEntities() {
        PrepareBuilder();
        result.blockedEntities_.Clear();
        return this;
      }
    }
    static EntityBlockedNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EntityUnblockedNotification : pb::GeneratedMessage<EntityUnblockedNotification, EntityUnblockedNotification.Builder> {
    private EntityUnblockedNotification() { }
    private static readonly EntityUnblockedNotification defaultInstance = new EntityUnblockedNotification().MakeReadOnly();
    private static readonly string[] _entityUnblockedNotificationFieldNames = new string[] { "unblocked_entities" };
    private static readonly uint[] _entityUnblockedNotificationFieldTags = new uint[] { 10 };
    public static EntityUnblockedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntityUnblockedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntityUnblockedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntityUnblockedNotification, EntityUnblockedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_EntityUnblockedNotification__FieldAccessorTable; }
    }
    
    public const int UnblockedEntitiesFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> unblockedEntities_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> UnblockedEntitiesList {
      get { return unblockedEntities_; }
    }
    public int UnblockedEntitiesCount {
      get { return unblockedEntities_.Count; }
    }
    public global::bnet.protocol.EntityId GetUnblockedEntities(int index) {
      return unblockedEntities_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in UnblockedEntitiesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _entityUnblockedNotificationFieldNames;
      if (unblockedEntities_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], unblockedEntities_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in UnblockedEntitiesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EntityUnblockedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntityUnblockedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityUnblockedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntityUnblockedNotification MakeReadOnly() {
      unblockedEntities_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntityUnblockedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EntityUnblockedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntityUnblockedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntityUnblockedNotification result;
      
      private EntityUnblockedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EntityUnblockedNotification original = result;
          result = new EntityUnblockedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntityUnblockedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.EntityUnblockedNotification.Descriptor; }
      }
      
      public override EntityUnblockedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.EntityUnblockedNotification.DefaultInstance; }
      }
      
      public override EntityUnblockedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntityUnblockedNotification) {
          return MergeFrom((EntityUnblockedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntityUnblockedNotification other) {
        if (other == global::bnet.protocol.user_manager.EntityUnblockedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.unblockedEntities_.Count != 0) {
          result.unblockedEntities_.Add(other.unblockedEntities_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entityUnblockedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entityUnblockedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.unblockedEntities_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> UnblockedEntitiesList {
        get { return PrepareBuilder().unblockedEntities_; }
      }
      public int UnblockedEntitiesCount {
        get { return result.UnblockedEntitiesCount; }
      }
      public global::bnet.protocol.EntityId GetUnblockedEntities(int index) {
        return result.GetUnblockedEntities(index);
      }
      public Builder SetUnblockedEntities(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedEntities_[index] = value;
        return this;
      }
      public Builder SetUnblockedEntities(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedEntities_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUnblockedEntities(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedEntities_.Add(value);
        return this;
      }
      public Builder AddUnblockedEntities(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedEntities_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUnblockedEntities(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.unblockedEntities_.Add(values);
        return this;
      }
      public Builder ClearUnblockedEntities() {
        PrepareBuilder();
        result.unblockedEntities_.Clear();
        return this;
      }
    }
    static EntityUnblockedNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RecentPlayersAddedNotification : pb::GeneratedMessage<RecentPlayersAddedNotification, RecentPlayersAddedNotification.Builder> {
    private RecentPlayersAddedNotification() { }
    private static readonly RecentPlayersAddedNotification defaultInstance = new RecentPlayersAddedNotification().MakeReadOnly();
    private static readonly string[] _recentPlayersAddedNotificationFieldNames = new string[] { "added_players" };
    private static readonly uint[] _recentPlayersAddedNotificationFieldTags = new uint[] { 10 };
    public static RecentPlayersAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayersAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecentPlayersAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayersAddedNotification, RecentPlayersAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayersAddedNotification__FieldAccessorTable; }
    }
    
    public const int AddedPlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> addedPlayers_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> AddedPlayersList {
      get { return addedPlayers_; }
    }
    public int AddedPlayersCount {
      get { return addedPlayers_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetAddedPlayers(int index) {
      return addedPlayers_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in AddedPlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recentPlayersAddedNotificationFieldNames;
      if (addedPlayers_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], addedPlayers_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in AddedPlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecentPlayersAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayersAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecentPlayersAddedNotification MakeReadOnly() {
      addedPlayers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayersAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayersAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecentPlayersAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecentPlayersAddedNotification result;
      
      private RecentPlayersAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          RecentPlayersAddedNotification original = result;
          result = new RecentPlayersAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecentPlayersAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RecentPlayersAddedNotification.Descriptor; }
      }
      
      public override RecentPlayersAddedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RecentPlayersAddedNotification.DefaultInstance; }
      }
      
      public override RecentPlayersAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecentPlayersAddedNotification) {
          return MergeFrom((RecentPlayersAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecentPlayersAddedNotification other) {
        if (other == global::bnet.protocol.user_manager.RecentPlayersAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.addedPlayers_.Count != 0) {
          result.addedPlayers_.Add(other.addedPlayers_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recentPlayersAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recentPlayersAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.addedPlayers_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> AddedPlayersList {
        get { return PrepareBuilder().addedPlayers_; }
      }
      public int AddedPlayersCount {
        get { return result.AddedPlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetAddedPlayers(int index) {
        return result.GetAddedPlayers(index);
      }
      public Builder SetAddedPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.addedPlayers_[index] = value;
        return this;
      }
      public Builder SetAddedPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.addedPlayers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAddedPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.addedPlayers_.Add(value);
        return this;
      }
      public Builder AddAddedPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.addedPlayers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAddedPlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.addedPlayers_.Add(values);
        return this;
      }
      public Builder ClearAddedPlayers() {
        PrepareBuilder();
        result.addedPlayers_.Clear();
        return this;
      }
    }
    static RecentPlayersAddedNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RecentPlayersRemovedNotification : pb::GeneratedMessage<RecentPlayersRemovedNotification, RecentPlayersRemovedNotification.Builder> {
    private RecentPlayersRemovedNotification() { }
    private static readonly RecentPlayersRemovedNotification defaultInstance = new RecentPlayersRemovedNotification().MakeReadOnly();
    private static readonly string[] _recentPlayersRemovedNotificationFieldNames = new string[] { "removed_players" };
    private static readonly uint[] _recentPlayersRemovedNotificationFieldTags = new uint[] { 10 };
    public static RecentPlayersRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayersRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecentPlayersRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayersRemovedNotification, RecentPlayersRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.Proto.UserManagerService.internal__static_bnet_protocol_user_manager_RecentPlayersRemovedNotification__FieldAccessorTable; }
    }
    
    public const int RemovedPlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> removedPlayers_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> RemovedPlayersList {
      get { return removedPlayers_; }
    }
    public int RemovedPlayersCount {
      get { return removedPlayers_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetRemovedPlayers(int index) {
      return removedPlayers_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RemovedPlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recentPlayersRemovedNotificationFieldNames;
      if (removedPlayers_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], removedPlayers_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RemovedPlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecentPlayersRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayersRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecentPlayersRemovedNotification MakeReadOnly() {
      removedPlayers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayersRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayersRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecentPlayersRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecentPlayersRemovedNotification result;
      
      private RecentPlayersRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          RecentPlayersRemovedNotification original = result;
          result = new RecentPlayersRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecentPlayersRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.Descriptor; }
      }
      
      public override RecentPlayersRemovedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.DefaultInstance; }
      }
      
      public override RecentPlayersRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecentPlayersRemovedNotification) {
          return MergeFrom((RecentPlayersRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecentPlayersRemovedNotification other) {
        if (other == global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.removedPlayers_.Count != 0) {
          result.removedPlayers_.Add(other.removedPlayers_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recentPlayersRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recentPlayersRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.removedPlayers_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> RemovedPlayersList {
        get { return PrepareBuilder().removedPlayers_; }
      }
      public int RemovedPlayersCount {
        get { return result.RemovedPlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetRemovedPlayers(int index) {
        return result.GetRemovedPlayers(index);
      }
      public Builder SetRemovedPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.removedPlayers_[index] = value;
        return this;
      }
      public Builder SetRemovedPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.removedPlayers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRemovedPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.removedPlayers_.Add(value);
        return this;
      }
      public Builder AddRemovedPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.removedPlayers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRemovedPlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.removedPlayers_.Add(values);
        return this;
      }
      public Builder ClearRemovedPlayers() {
        PrepareBuilder();
        result.removedPlayers_.Clear();
        return this;
      }
    }
    static RecentPlayersRemovedNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.Proto.UserManagerService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class UserManagerService : pb::IService {
    public abstract void SubscribeToUserManager(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
        global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done);
    public abstract void AddRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done);
    public abstract void ClearRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.NoData request,
        global::System.Action<global::bnet.protocol.user_manager.ClearRecentPlayersResponse> done);
    public abstract void BlockEntity(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockEntityRequest request,
        global::System.Action<global::bnet.protocol.user_manager.BlockEntityResponse> done);
    public abstract void UnblockEntity(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.UnblockEntityRequest request,
        global::System.Action<global::bnet.protocol.user_manager.UnblockEntityResponse> done);
    public abstract void ClearBlockList(
        pb::IRpcController controller,
        global::bnet.protocol.NoData request,
        global::System.Action<global::bnet.protocol.user_manager.ClearBlockListResponse> done);
    public abstract void BlockEntityForSession(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockEntityRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void LoadBlockList(
        pb::IRpcController controller,
        global::bnet.protocol.EntityId request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.UserManagerService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SubscribeToUserManager(controller, (global::bnet.protocol.user_manager.SubscribeToUserManagerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse>(
              done));
          return;
        case 1:
          this.AddRecentPlayers(controller, (global::bnet.protocol.user_manager.AddRecentPlayersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse>(
              done));
          return;
        case 2:
          this.ClearRecentPlayers(controller, (global::bnet.protocol.NoData) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.ClearRecentPlayersResponse>(
              done));
          return;
        case 3:
          this.BlockEntity(controller, (global::bnet.protocol.user_manager.BlockEntityRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.BlockEntityResponse>(
              done));
          return;
        case 4:
          this.UnblockEntity(controller, (global::bnet.protocol.user_manager.UnblockEntityRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.UnblockEntityResponse>(
              done));
          return;
        case 5:
          this.ClearBlockList(controller, (global::bnet.protocol.NoData) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.ClearBlockListResponse>(
              done));
          return;
        case 6:
          this.BlockEntityForSession(controller, (global::bnet.protocol.user_manager.BlockEntityRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 7:
          this.LoadBlockList(controller, (global::bnet.protocol.EntityId) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.BlockEntityRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.user_manager.UnblockEntityRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 6:
          return global::bnet.protocol.user_manager.BlockEntityRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.EntityId.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.ClearRecentPlayersResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.BlockEntityResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.user_manager.UnblockEntityResponse.DefaultInstance;
        case 5:
          return global::bnet.protocol.user_manager.ClearBlockListResponse.DefaultInstance;
        case 6:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 7:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SubscribeToUserManager(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
          global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(done, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance));
      }
      
      public override void AddRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance));
      }
      
      public override void ClearRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.NoData request,
          global::System.Action<global::bnet.protocol.user_manager.ClearRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.user_manager.ClearRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.ClearRecentPlayersResponse, global::bnet.protocol.user_manager.ClearRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.ClearRecentPlayersResponse.DefaultInstance));
      }
      
      public override void BlockEntity(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockEntityRequest request,
          global::System.Action<global::bnet.protocol.user_manager.BlockEntityResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.user_manager.BlockEntityResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.BlockEntityResponse, global::bnet.protocol.user_manager.BlockEntityResponse.Builder>(done, global::bnet.protocol.user_manager.BlockEntityResponse.DefaultInstance));
      }
      
      public override void UnblockEntity(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.UnblockEntityRequest request,
          global::System.Action<global::bnet.protocol.user_manager.UnblockEntityResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.user_manager.UnblockEntityResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.UnblockEntityResponse, global::bnet.protocol.user_manager.UnblockEntityResponse.Builder>(done, global::bnet.protocol.user_manager.UnblockEntityResponse.DefaultInstance));
      }
      
      public override void ClearBlockList(
          pb::IRpcController controller,
          global::bnet.protocol.NoData request,
          global::System.Action<global::bnet.protocol.user_manager.ClearBlockListResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.user_manager.ClearBlockListResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.ClearBlockListResponse, global::bnet.protocol.user_manager.ClearBlockListResponse.Builder>(done, global::bnet.protocol.user_manager.ClearBlockListResponse.DefaultInstance));
      }
      
      public override void BlockEntityForSession(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockEntityRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void LoadBlockList(
          pb::IRpcController controller,
          global::bnet.protocol.EntityId request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class UserManagerNotify : pb::IService {
    public abstract void NotifyEntityBlocked(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.EntityBlockedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyEntityUnblocked(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.EntityUnblockedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyRecentPlayersAdded(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.RecentPlayersAddedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyRecentPlayersRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.RecentPlayersRemovedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.UserManagerService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyEntityBlocked(controller, (global::bnet.protocol.user_manager.EntityBlockedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyEntityUnblocked(controller, (global::bnet.protocol.user_manager.EntityUnblockedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyRecentPlayersAdded(controller, (global::bnet.protocol.user_manager.RecentPlayersAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.NotifyRecentPlayersRemoved(controller, (global::bnet.protocol.user_manager.RecentPlayersRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.EntityBlockedNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.EntityUnblockedNotification.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.RecentPlayersAddedNotification.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.RecentPlayersRemovedNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyEntityBlocked(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.EntityBlockedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyEntityUnblocked(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.EntityUnblockedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyRecentPlayersAdded(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.RecentPlayersAddedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyRecentPlayersRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.RecentPlayersRemovedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
